{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dogs v Cats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%reload_ext autoreload\n",
    "%autoreload 2\n",
    "%matplotlib inline\n",
    "\n",
    "from fastai.imports import *\n",
    "\n",
    "from fastai.transforms import *\n",
    "from fastai.conv_learner import *\n",
    "from fastai.model import *\n",
    "from fastai.dataset import *\n",
    "from fastai.sgdr import *\n",
    "import skimage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "PATH = \"data/dogscats/\"\n",
    "sz = 224\n",
    "arch = resnet34\n",
    "bs = 64"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "m = arch(True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ResNet(\n",
       "  (conv1): Conv2d (3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n",
       "  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "  (relu): ReLU(inplace)\n",
       "  (maxpool): MaxPool2d(kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1))\n",
       "  (layer1): Sequential(\n",
       "    (0): BasicBlock(\n",
       "      (conv1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (1): BasicBlock(\n",
       "      (conv1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (2): BasicBlock(\n",
       "      (conv1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "  )\n",
       "  (layer2): Sequential(\n",
       "    (0): BasicBlock(\n",
       "      (conv1): Conv2d (64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (downsample): Sequential(\n",
       "        (0): Conv2d (64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
       "        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      )\n",
       "    )\n",
       "    (1): BasicBlock(\n",
       "      (conv1): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (2): BasicBlock(\n",
       "      (conv1): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (3): BasicBlock(\n",
       "      (conv1): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "  )\n",
       "  (layer3): Sequential(\n",
       "    (0): BasicBlock(\n",
       "      (conv1): Conv2d (128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (downsample): Sequential(\n",
       "        (0): Conv2d (128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
       "        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      )\n",
       "    )\n",
       "    (1): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (2): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (3): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (4): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (5): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "  )\n",
       "  (layer4): Sequential(\n",
       "    (0): BasicBlock(\n",
       "      (conv1): Conv2d (256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (downsample): Sequential(\n",
       "        (0): Conv2d (256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
       "        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      )\n",
       "    )\n",
       "    (1): BasicBlock(\n",
       "      (conv1): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (2): BasicBlock(\n",
       "      (conv1): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "  )\n",
       "  (avgpool): AvgPool2d(kernel_size=7, stride=1, padding=0, ceil_mode=False, count_include_pad=True)\n",
       "  (fc): Linear(in_features=512, out_features=1000)\n",
       ")"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "m = nn.Sequential(*children(m)[:-2], \n",
    "                  nn.Conv2d(512, 2, 3, padding=1), \n",
    "                  nn.AdaptiveAvgPool2d(1), Flatten(), \n",
    "                  nn.LogSoftmax())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Sequential(\n",
       "  (0): Conv2d (3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n",
       "  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "  (2): ReLU(inplace)\n",
       "  (3): MaxPool2d(kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1))\n",
       "  (4): Sequential(\n",
       "    (0): BasicBlock(\n",
       "      (conv1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (1): BasicBlock(\n",
       "      (conv1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (2): BasicBlock(\n",
       "      (conv1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "  )\n",
       "  (5): Sequential(\n",
       "    (0): BasicBlock(\n",
       "      (conv1): Conv2d (64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (downsample): Sequential(\n",
       "        (0): Conv2d (64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
       "        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      )\n",
       "    )\n",
       "    (1): BasicBlock(\n",
       "      (conv1): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (2): BasicBlock(\n",
       "      (conv1): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (3): BasicBlock(\n",
       "      (conv1): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "  )\n",
       "  (6): Sequential(\n",
       "    (0): BasicBlock(\n",
       "      (conv1): Conv2d (128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (downsample): Sequential(\n",
       "        (0): Conv2d (128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
       "        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      )\n",
       "    )\n",
       "    (1): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (2): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (3): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (4): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (5): BasicBlock(\n",
       "      (conv1): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "  )\n",
       "  (7): Sequential(\n",
       "    (0): BasicBlock(\n",
       "      (conv1): Conv2d (256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (downsample): Sequential(\n",
       "        (0): Conv2d (256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n",
       "        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      )\n",
       "    )\n",
       "    (1): BasicBlock(\n",
       "      (conv1): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "    (2): BasicBlock(\n",
       "      (conv1): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "      (relu): ReLU(inplace)\n",
       "      (conv2): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n",
       "      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)\n",
       "    )\n",
       "  )\n",
       "  (8): Conv2d (512, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "  (9): AdaptiveAvgPool2d(output_size=1)\n",
       "  (10): Flatten(\n",
       "  )\n",
       "  (11): LogSoftmax()\n",
       ")"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "tfms = tfms_from_model(arch, sz, aug_tfms=transforms_side_on, max_zoom=1.1)\n",
    "data = ImageClassifierData.from_paths(PATH, tfms=tfms, bs=bs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "learn = ConvLearner.from_model_data(m, data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "learn.freeze_to(-4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m[-5].trainable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m[-1].trainable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m[-4].trainable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "18a91139fc1a4ad9a939cbb0cfb2afb0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/html": [
       "<p>Failed to display Jupyter Widget of type <code>HBox</code>.</p>\n",
       "<p>\n",
       "  If you're reading this message in the Jupyter Notebook or JupyterLab Notebook, it may mean\n",
       "  that the widgets JavaScript is still loading. If this message persists, it\n",
       "  likely means that the widgets JavaScript library is either not installed or\n",
       "  not enabled. See the <a href=\"https://ipywidgets.readthedocs.io/en/stable/user_install.html\">Jupyter\n",
       "  Widgets Documentation</a> for setup instructions.\n",
       "</p>\n",
       "<p>\n",
       "  If you're reading this message in another frontend (for example, a static\n",
       "  rendering on GitHub or <a href=\"https://nbviewer.jupyter.org/\">NBViewer</a>),\n",
       "  it may mean that your frontend doesn't currently support widgets.\n",
       "</p>\n"
      ],
      "text/plain": [
       "HBox(children=(IntProgress(value=0, description='Epoch', max=1), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "epoch      trn_loss   val_loss   accuracy                    \n",
      "    0      0.223431   0.143699   0.985352  \n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.14369938, 0.9853515625]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "learn.fit(0.01, 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "140bc43adbe34c8883339a4f5c0150cd",
       "version_major": 2,
       "version_minor": 0
      },
      "text/html": [
       "<p>Failed to display Jupyter Widget of type <code>HBox</code>.</p>\n",
       "<p>\n",
       "  If you're reading this message in the Jupyter Notebook or JupyterLab Notebook, it may mean\n",
       "  that the widgets JavaScript is still loading. If this message persists, it\n",
       "  likely means that the widgets JavaScript library is either not installed or\n",
       "  not enabled. See the <a href=\"https://ipywidgets.readthedocs.io/en/stable/user_install.html\">Jupyter\n",
       "  Widgets Documentation</a> for setup instructions.\n",
       "</p>\n",
       "<p>\n",
       "  If you're reading this message in another frontend (for example, a static\n",
       "  rendering on GitHub or <a href=\"https://nbviewer.jupyter.org/\">NBViewer</a>),\n",
       "  it may mean that your frontend doesn't currently support widgets.\n",
       "</p>\n"
      ],
      "text/plain": [
       "HBox(children=(IntProgress(value=0, description='Epoch', max=1), HTML(value='')))"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "epoch      trn_loss   val_loss   accuracy                     \n",
      "    0      0.065146   0.081183   0.989746  \n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.081182756, 0.98974609375]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "learn.fit(0.01, 1, cycle_len=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Class Activation Maps (CAM)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "class SaveFeatures():\n",
    "    features=None\n",
    "    def __init__(self, m): self.hook = m.register_forward_hook(self.hook_fn)\n",
    "    def hook_fn(self, module, input, output): self.features = output\n",
    "    def remove(self): self.hook.remove()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "x,y = next(iter(data.val_dl))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "x,y = x[None,1], y[None,1]\n",
    "vx = Variable(x.cuda(), requires_grad=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dx = data.val_ds.denorm(x)[0]\n",
    "plt.imshow(dx);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'Sequential' object has no attribute 'layer1'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-20-8dac50fa6366>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msfs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mSaveFeatures\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mo\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mo\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayer1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayer2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayer3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayer4\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m    364\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mmodules\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    365\u001b[0m         raise AttributeError(\"'{}' object has no attribute '{}'\".format(\n\u001b[0;32m--> 366\u001b[0;31m             type(self).__name__, name))\n\u001b[0m\u001b[1;32m    367\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    368\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'Sequential' object has no attribute 'layer1'"
     ]
    }
   ],
   "source": [
    "sfs = [SaveFeatures(o) for o in [m[-7], m[-6], m[-5], m[-4]]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 4 ms, sys: 0 ns, total: 4 ms\n",
      "Wall time: 6.34 ms\n"
     ]
    }
   ],
   "source": [
    "%time py = m(Variable(x.cuda()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'sfs' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-22-9c8cf707f50f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mo\u001b[0m \u001b[0;32min\u001b[0m \u001b[0msfs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mremove\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'sfs' is not defined"
     ]
    }
   ],
   "source": [
    "for o in sfs: o.remove()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[torch.Size([64, 64, 56, 56]),\n",
       " torch.Size([64, 128, 28, 28]),\n",
       " torch.Size([64, 256, 14, 14]),\n",
       " torch.Size([64, 512, 7, 7])]"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[o.features.size() for o in sfs]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 1.,  0.], dtype=float32)"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "py = np.exp(to_np(py)[0]); py"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2, 7, 7)"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feat = np.maximum(0,to_np(sfs[3].features[0]))\n",
    "feat.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.06796,  0.09529,  0.04571,  0.02226,  0.01783,  0.02682,  0.     ],\n",
       "       [ 0.18074,  0.25366,  0.21349,  0.17134,  0.12896,  0.07998,  0.02269],\n",
       "       [ 0.32468,  0.53808,  0.58196,  0.51675,  0.36953,  0.20348,  0.06563],\n",
       "       [ 0.4753 ,  0.82032,  0.93738,  0.84066,  0.58015,  0.30568,  0.09089],\n",
       "       [ 0.53621,  0.90491,  1.     ,  0.87108,  0.60574,  0.33723,  0.11391],\n",
       "       [ 0.44609,  0.70038,  0.72927,  0.60194,  0.42627,  0.26258,  0.10247],\n",
       "       [ 0.21954,  0.3172 ,  0.30497,  0.21987,  0.15255,  0.08741,  0.00709]], dtype=float32)"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f2=np.dot(np.rollaxis(feat,0,3), py)\n",
    "f2-=f2.min()\n",
    "f2/=f2.max()\n",
    "f2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nGsP4/wH7Pm3QoxvZBAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f35be96c6a0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.imshow(dx)\n",
    "plt.imshow(skimage.transform.resize(f2, dx.shape), alpha=0.5, cmap='hot');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "learn.unfreeze()\n",
    "learn.bn_freeze(True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 12 layer groups call for 12 lrs\n",
    "lr=np.array([[1e-6]*4,[1e-4]*4,[1e-2]*4]).flatten()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "332ee77d38594f239e83afcbaf4b28ee",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "A Jupyter Widget"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.       0.02049  0.01577  0.99405]                         \n",
      "[ 1.       0.01648  0.0137   0.99554]                          \n",
      "\n"
     ]
    }
   ],
   "source": [
    "learn.fit(lr, 2, cycle_len=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.996"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_preds,y = learn.TTA()\n",
    "preds = np.mean(np.exp(log_preds),0)\n",
    "accuracy_np(preds,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "aae7fd5595d242d8adbf619aeb8371c9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "A Jupyter Widget"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.       0.01243  0.01535  0.99554]                          \n",
      "[ 1.       0.0128   0.01507  0.99554]                          \n",
      "\n"
     ]
    }
   ],
   "source": [
    "learn.fit(lr, 2, cycle_len=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.99650000000000005"
      ]
     },
     "execution_count": null,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_preds,y = learn.TTA()\n",
    "preds = np.mean(np.exp(log_preds),0)\n",
    "accuracy_np(preds,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
